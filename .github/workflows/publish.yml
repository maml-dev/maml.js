name: Publish

on:
  workflow_dispatch:
  release:
    types: [created]

permissions: {}

env:
  npm_config_audit: false
  npm_config_fund: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Compare release tag with package.json
        if: github.event_name == 'release'
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          PKG_VERSION=$(node -p "require('./package.json').version")

          echo "Release tag: $RELEASE_VERSION"
          echo "package.json: $PKG_VERSION"

          [ "$RELEASE_VERSION" = "$PKG_VERSION" ] || { echo "❌ Mismatch"; exit 1; }
      - name: Use Node.js 24
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            build
            package.json
            package-cjs.json
            package-esm.json
          retention-days: 1

  npm-publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: read
      statuses: write
      contents: write
      packages: write
      id-token: write
    env:
      NPM_REGISTRY: registry.npmjs.org
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_NPM_REGISTRY: npm.pkg.github.com
      GH_NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'npm'
      - name: Configure npmrc
        run: |
          echo "//${{ env.NPM_REGISTRY }}/:_authToken=$NPM_TOKEN" >> .npmrc
          echo "//${{ env.GH_NPM_REGISTRY }}/:_authToken=$GH_NPM_TOKEN" >> .npmrc
      - uses: actions/download-artifact@v5
        with:
          name: build-${{ github.run_id }}

      - name: pushing ESM to ${{ env.NPM_REGISTRY }}
        run: |
          mv -f package-esm.json package.json
          npm publish --no-git-tag-version --provenance --access=public

      - name: pushing CJS to ${{ env.NPM_REGISTRY }}
        run: |
          mv -f package-cjs.json package.json
          npm publish --tag cjs --no-git-tag-version --provenance --access=public

      - name: pushing ESM to ${{ env.GH_NPM_REGISTRY }}
        run: |
          mv -f package-esm.json package.json
          cat <<< $(jq '.name="@${{ github.repository }}"' package.json) > package.json
          npm publish --no-git-tag-version --access=public --registry https://${{ env.GH_NPM_REGISTRY }}
